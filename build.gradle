apply plugin: 'maven-publish'
apply plugin: 'kotlin'

buildscript {
    ext.kotlin_version = '1.3.50'
    ext.dashj_version = '0.18-SNAPSHOT'
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

allprojects {
    repositories {
        jcenter()
        mavenLocal()
        maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
    }
}

group 'org.dashevo'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'co.nstant.in:cbor:0.8'
    implementation "org.dashj:dashj-core:$dashj_version"
    implementation 'org.json:json:20190722'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testImplementation 'org.assertj:assertj-core:3.10.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

assemble.dependsOn(publishToMavenLocal)

test {
    useJUnitPlatform()
}