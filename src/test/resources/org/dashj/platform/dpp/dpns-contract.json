{
  "protocolVersion": 1,
  "$schema": "https://schema.dash.org/dpp-0-4-0/meta/data-contract",
  "documents": {
    "preorder": {
      "indices": [{
        "name": "saltedHash",
        "properties": [{"saltedDomainHash": "asc"}],
        "unique": true
      }],
      "$comment": "Preorder documents are immutable: modification and deletion are restricted",
      "additionalProperties": false,
      "type": "object",
      "required": ["saltedDomainHash"],
      "properties": {"saltedDomainHash": {
        "minItems": 32,
        "maxItems": 32,
        "description": "Double sha-256 of the concatenation of a 32 byte random salt and a normalized domain name",
        "type": "array",
        "byteArray": true
      }}
    },
    "domain": {
      "indices": [
        {
          "name": "parentNameAndLabel",
          "properties": [
            {"normalizedParentDomainName": "asc"},
            {"normalizedLabel": "asc"}
          ],
          "unique": true
        },
        {
          "name": "dashIdentityId",
          "properties": [{"records.dashUniqueIdentityId": "asc"}],
          "unique": true
        },
        {
          "name": "dashAlias",
          "properties": [{"records.dashAliasIdentityId": "asc"}]
        }
      ],
      "$comment": "In order to register a domain you need to create a preorder. The preorder step is needed to prevent man-in-the-middle attacks. normalizedLabel + '.' + normalizedParentDomain must not be longer than 253 chars length as defined by RFC 1035. Domain documents are immutable: modification and deletion are restricted",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "label",
        "normalizedLabel",
        "normalizedParentDomainName",
        "preorderSalt",
        "records",
        "subdomainRules"
      ],
      "properties": {
        "preorderSalt": {
          "minItems": 32,
          "maxItems": 32,
          "description": "Salt used in the preorder document",
          "type": "array",
          "byteArray": true
        },
        "normalizedParentDomainName": {
          "pattern": "^$|^[[a-z0-9][a-z0-9-\\.]{0,188}[a-z0-9]$",
          "description": "A full parent domain name in lowercase for case-insensitive uniqueness validation. e.g. 'dash'",
          "$comment": "Must either be equal to an existing domain or empty to create a top level domain. Only the data contract owner can create top level domains.",
          "type": "string",
          "maxLength": 190,
          "minLength": 0
        },
        "label": {
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]$",
          "description": "Domain label. e.g. 'Bob'.",
          "type": "string",
          "maxLength": 63,
          "minLength": 3
        },
        "normalizedLabel": {
          "pattern": "^[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$",
          "description": "Domain label in lowercase for case-insensitive uniqueness validation. e.g. 'bob'",
          "$comment": "Must be equal to the label in lowercase. This property will be deprecated due to case insensitive indices",
          "type": "string",
          "maxLength": 63
        },
        "records": {
          "$comment": "Constraint with max and min properties ensure that only one identity record is used - either a `dashUniqueIdentityId` or a `dashAliasIdentityId`",
          "maxProperties": 1,
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "dashAliasIdentityId": {
              "minItems": 32,
              "maxItems": 32,
              "contentMediaType": "application/x.dash.dpp.identifier",
              "byteArray": true,
              "description": "Identity ID to be used to create alias names for the Identity",
              "$comment": "Must be equal to the document owner",
              "type": "array"
            },
            "dashUniqueIdentityId": {
              "minItems": 32,
              "maxItems": 32,
              "contentMediaType": "application/x.dash.dpp.identifier",
              "byteArray": true,
              "description": "Identity ID to be used to create the primary name the Identity",
              "$comment": "Must be equal to the document owner",
              "type": "array"
            }
          },
          "minProperties": 1
        },
        "subdomainRules": {
          "description": "Subdomain rules allow domain owners to define rules for subdomains",
          "additionalProperties": false,
          "type": "object",
          "required": ["allowSubdomains"],
          "properties": {"allowSubdomains": {
            "type": "boolean",
            "description": "This option defines who can create subdomains: true - anyone; false - only the domain owner",
            "$comment": "Only the domain owner is allowed to create subdomains for non top-level domains"
          }}
        }
      }
    }
  },
  "$id": "566vcJkmebVCAb2Dkj2yVMSgGFcsshupnQqtsz1RFbcy"
}